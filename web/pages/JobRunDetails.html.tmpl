<!DOCTYPE html>

<html>
    <head>
        <!--<link rel="stylesheet" href="/static/simple.min.css">-->
        <link rel="stylesheet" href="/static/pico.min.css">
        <link rel="apple-touch-icon" sizes="180x180" href="/static/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/static/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/static/favicon-16x16.png">
        <link rel="manifest" href="/static/site.webmanifest">
    </head>
    <body class="container-fluid">
        <header>
            <nav aria-label="breadcrumb">
                <ul>
                    <li><a href="/">Home</a></li>
                    <li><a href="{{.PreviousURL}}">Job Runs</a></li>
                    <li>{{.Run.ID}}</li>
                </ul>
            </nav>
            <h2>Job Run {{.Run.ID}}</h2>
        </header>

        <main>
            <details open={true}>
                <summary>Run Details</summary>
                    <table>
                        <tr>
                            <td><b>Job name:</b></td>
                            <td><a href="/runs.html?job={{.Run.Name}}">{{.Run.Name}}</a></td>
                        </tr>
                        <tr>
                            <td><b>Ran on:</b></td>
                            <td><a href="/runs.html?host={{.Run.Host.Name}}">{{.Run.Host.Name}}</a> ({{.Run.Host.OS.Name}}, {{.Run.Host.OS.Version}}, {{.Run.Host.OS.KernelVersion}})</td> 
                        </tr>
                        <tr>
                            <td><b>Ran as:</b></td>
                            <td>{{.Run.User.Username}} (uid: {{.Run.User.Uid}}, gid: {{.Run.User.Gid}})</td>
                        </tr>
                        <tr>
                            <td><b>Started At:</b></td>
                            <td>{{.Run.StartedAt}}</td>
                        </tr>
                        <tr>
                            <td><b>Finished At:</b></td>
                            <td>{{if eq .Run.Status "started-normally"}}{{.Run.FinishedAt}}{{end}}</td>
                        </tr>
                        <tr>
                            <td><b>Duration:</b></td>
                            <td>{{if eq .Run.Status "started-normally"}}{{.Run.Result.WallTime}}{{end}}</td>
                        </tr>
                        <tr>
                            <td><b>Status:</b></td>
                            <td>{{if eq .Run.Status "start-denied"}}process start denied because of -once{{else}}{{.Run.Status}}{{end}}</a></td>
                        </tr>
                        <tr>
                            <td><b>Exit code:</b></td>
                            <td>{{if eq .Run.Status "started-normally"}}{{.Run.Result.ExitCode}} {{if eq .Run.Result.ExitCode 0}}‚úÖ{{else}}‚ùå{{end}} {{if gt .Run.Result.ReceivedSignal 0}}(received signal: {{.Run.Result.ReceivedSignal}}){{end}}{{else}}üö´ (not started){{end}}</td>
                        </tr>
                    </table>
            </details>
            <details open={true}>
                <summary>Resources</summary>
                <table>
                    <tr>
                        <td><b>CPU:</b></td>
                        <td>
                        {{if eq .Run.Status "started-normally"}}
                            {{printf "%.2f" .Run.Result.CPUUtilization}}% ({{.Run.Result.SystemTime}} sys / {{.Run.Result.UserTime}} user / {{.Run.Result.IdleTime}} idle)
                        {{end}}
                        </td>
                    </tr>
                    <tr>
                        <td><b>Memory: </b></td>
                        <td>
                        {{if eq .Run.Status "started-normally"}}
                            {{printf "%.2f" .Run.Result.MemoryUtilization}}% ({{convertBytes .Run.Result.MaxRssBytes}})
                        {{end}}
                        </td>
                    </tr>
                    <tr>
                        <td><b>IO: </b></td>
                        <td>
                        {{if eq .Run.Status "started-normally"}}
                            Read: {{convertBytes .Run.Result.IOBytesRead}} / Write: {{convertBytes .Run.Result.IOBytesWritten}}
                        {{end}}
                        </td>
                    </tr>
                </table>
            </details>
            <details>
                <summary>Environment</summary>
                <table>
                    <tbody>
                    {{range $key, $value := .Run.Environment}}
                        <tr>
                            <td><b>{{$key}}</b></td>
                            <td>{{$value}}</td>
                        </tr>
                    {{end}}
                    </tbody>
                </table>
            </details>
            <details open={true}>
                <summary>Previous Runs (showing {{ len .PreviousRuns }} out of {{.TotalPreviousRuns}})</summary>
                <table>
                    <tbody>
                    {{$runID := .Run.ID}}
                    {{range .PreviousRuns}}
                        <tr>
                            <td>{{ if eq .Status "started-normally" }} {{if eq .Result.ExitCode 0}}‚úÖ{{else}}‚ùå{{end}}{{end}}</td>
                            <td>{{ if eq .Status "started-normally" }}finished {{.FinishedAt}} {{else}} job run denied {{end}} on <a href="/runs.html?host={{.Host.Name}}">{{.Host.Name}}</a></td>
                            <td>{{if ne .ID $runID}}<a href="/run.html?id={{.ID}}">Details</a>{{end}}</td>
                        </tr>
                    {{end}}
                    </tbody>
                </table>
                {{if gt (len .PreviousRuns) 0}}
                    <small><a href="/runs.html?job={{.Run.Name}}&before={{.Run.FinishedAt|escapeTime}}">Show All</a></small>
                {{end}}
            </details>
            <details {{if .Run.Result.Stdout}} open={true} {{end}}>
                <summary>Job Output (stdout)</summary>
                <textarea rows=20 name="stdout" style='font-family: "Lucida Console", Courier, monospace;' readonly>{{.Run.Result.Stdout}}</textarea>
            </details>
                

            <details {{if .Run.Result.Stderr}} open={true} {{end}}>
                    <summary>Job Output (stderr)</summary>
                    <textarea rows=20 name="stderr" style='font-family: Courier, monospace;' readonly>{{.Run.Result.Stderr}}</textarea>
            </details>
        </main>
    </body>
</html>